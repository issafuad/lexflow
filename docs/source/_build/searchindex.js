Search.setIndex({"docnames": ["api", "generated/base", "generated/base.executable", "generated/base.other", "generated/modules", "index", "usage"], "filenames": ["api.rst", "generated/base.rst", "generated/base.executable.rst", "generated/base.other.rst", "generated/modules.rst", "index.rst", "usage.rst"], "titles": ["API Documentation", "base package", "base.executable module", "base.other module", "src", "Welcome to LexFlow\u2019s documentation!", "Usage"], "terms": {"lu": [], "make": [], "i": [5, 6], "python": [], "librari": [], "cook": [], "food": [], "lover": [], "creat": [], "recip": [], "mix": [], "random": 2, "ingredi": [], "It": [], "pull": [], "data": [], "from": 2, "open": [], "fact": [], "databas": [], "offer": [], "simpl": [], "intuit": [], "api": 5, "check": [], "out": 5, "usag": 5, "section": [], "further": [], "inform": [0, 5], "includ": [], "how": [], "instal": 5, "project": [], "thi": [0, 2, 5, 6], "under": [], "activ": [], "develop": [], "To": 6, "us": [0, 5], "lumach": [], "first": [], "pip": 6, "venv": [], "retriev": [], "list": 2, "you": 5, "can": 5, "get_random_ingredi": [], "function": 2, "The": [], "kind": [], "paramet": [], "should": 2, "either": [], "meat": [], "fish": [], "veggi": [], "otherwis": [], "rais": [], "an": [], "except": [], "For": [], "exampl": [], "import": 5, "shell": [], "gorgonzola": [], "parslei": [], "execut": [1, 4], "other": [1, 4], "packag": [4, 5], "submodul": 4, "modul": [0, 4], "content": 4, "lexflow": 6, "provid": [], "interfac": [], "text": [], "base": [4, 5], "name": [1, 2], "str": 2, "type": [1, 2], "liter": 2, "ident": 2, "choic": [1, 2], "all": 2, "index": 2, "stringifi": 2, "listify_func": [1, 2], "callabl": 2, "lambda": 2, "string_cont": [1, 2], "none": 2, "list_cont": [1, 2], "input": [1, 2], "bool": 2, "fals": 2, "level": [1, 2], "int": 2, "0": [0, 2], "sourc": 2, "chain": [1, 2, 4], "model_config": [1, 2], "model_field": [1, 2], "run": [1, 2, 6], "concept": [1, 2, 4], "assign_list_cont": [1, 2], "assign_string_cont": [1, 2], "get_nam": [1, 2], "get_valu": [1, 2], "conceptregistri": [1, 2, 4], "update_concept": [1, 2], "memori": [1, 2], "executableorchestr": [1, 2, 4], "compon": [1, 2], "languagemodel": [1, 2, 4], "generate_respons": [1, 2], "generate_response_async": [1, 2], "probabilisticcompon": [1, 2, 4], "model": [1, 2], "prompt": [1, 2, 4], "assign_output_as_str": [1, 2], "fill": [1, 2], "filled_prompt": [1, 2], "output": [1, 2], "return_output_concept": [1, 2], "templat": [1, 2], "thread": [1, 2, 4], "class": 2, "classvar": 2, "configdict": 2, "configur": 2, "dictionari": 2, "conform": 2, "pydant": 2, "config": 2, "dict": 2, "fieldinfo": 2, "annot": 2, "union": 2, "requir": 2, "true": 2, "metadata": 2, "about": 2, "field": 2, "defin": 2, "map": 2, "replac": [0, 2], "__fields__": 2, "v1": 2, "concept_registri": 2, "callback": 2, "object": 2, "_initial_concept": 2, "_concept": 2, "properti": 2, "basemodel": 2, "abc": 2, "default": 2, "abstract": 2, "option": 2, "strict": 2, "running_concept": 2, "streamlin": [], "process": [], "manipul": [], "work": [], "textual": [], "direct": [0, 5, 6], "convei": 0, "crucial": [0, 5], "new": 0, "version": 0, "1": 0, "indic": 0, "when": 0, "featur": 0, "wa": 0, "ad": 0, "actual": 0, "deprec": 0, "sinc": 0, "note": 5, "highlight": [5, 6], "warn": 5, "more": 5, "need": 5, "stand": 5, "see": 5, "also": 5, "point": 5, "reader": 5, "relat": 5, "refer": 5, "tip": 6, "suggest": 6, "best": 6, "practic": 6, "src": 5}, "objects": {"": [[1, 0, 0, "-", "base"]], "base": [[2, 0, 0, "-", "executable"], [3, 0, 0, "-", "other"]], "base.executable": [[2, 1, 1, "", "Chain"], [2, 1, 1, "", "Concept"], [2, 1, 1, "", "ConceptRegistry"], [2, 1, 1, "", "Executable"], [2, 1, 1, "", "ExecutableOrchestrator"], [2, 1, 1, "", "LanguageModel"], [2, 1, 1, "", "ProbabilisticComponent"], [2, 1, 1, "", "Prompt"], [2, 1, 1, "", "Threads"]], "base.executable.Chain": [[2, 2, 1, "", "model_config"], [2, 2, 1, "", "model_fields"], [2, 3, 1, "", "run"]], "base.executable.Concept": [[2, 3, 1, "", "assign_list_content"], [2, 3, 1, "", "assign_string_content"], [2, 2, 1, "", "choice"], [2, 3, 1, "", "get_name"], [2, 3, 1, "", "get_value"], [2, 2, 1, "", "inputted"], [2, 2, 1, "", "level"], [2, 2, 1, "", "list_content"], [2, 3, 1, "", "listify_func"], [2, 2, 1, "", "name"], [2, 2, 1, "", "string_content"], [2, 2, 1, "", "type"]], "base.executable.ConceptRegistry": [[2, 4, 1, "", "concepts"], [2, 3, 1, "", "update_concepts"]], "base.executable.Executable": [[2, 2, 1, "", "memory"], [2, 2, 1, "", "model_config"], [2, 2, 1, "", "model_fields"], [2, 3, 1, "", "run"]], "base.executable.ExecutableOrchestrator": [[2, 2, 1, "", "components"], [2, 2, 1, "", "model_config"], [2, 2, 1, "", "model_fields"]], "base.executable.LanguageModel": [[2, 2, 1, "", "generate_response"], [2, 2, 1, "", "generate_response_async"], [2, 2, 1, "", "memory"], [2, 2, 1, "", "model_config"], [2, 2, 1, "", "model_fields"], [2, 2, 1, "", "name"]], "base.executable.ProbabilisticComponent": [[2, 2, 1, "", "model"], [2, 2, 1, "", "model_config"], [2, 2, 1, "", "model_fields"], [2, 2, 1, "", "prompt"], [2, 3, 1, "", "run"]], "base.executable.Prompt": [[2, 3, 1, "", "assign_output_as_string"], [2, 3, 1, "", "fill"], [2, 2, 1, "", "filled_prompt"], [2, 2, 1, "", "inputs"], [2, 2, 1, "", "output"], [2, 3, 1, "", "return_output_concept"], [2, 2, 1, "", "template"]], "base.executable.Threads": [[2, 2, 1, "", "model_config"], [2, 2, 1, "", "model_fields"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"api": 0, "welcom": 5, "lumach": [], "": 5, "document": [0, 5], "content": [1, 5], "usag": 6, "instal": 6, "creat": [], "recip": [], "base": [0, 1, 2, 3], "packag": 1, "submodul": 1, "modul": [1, 2, 3], "execut": 2, "other": 3, "work": [], "concept": [], "class": [], "src": 4, "lexflow": 5, "tabl": 5}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"base package": [[1, "base-package"]], "Submodules": [[1, "submodules"]], "Module contents": [[1, "module-contents"]], "base.other module": [[3, "base-other-module"]], "src": [[4, "src"]], "API Documentation": [[0, "api-documentation"]], "Base": [[0, "base"]], "Usage": [[6, "usage"]], "Installation": [[6, "installation"]], "base.executable module": [[2, "base-executable-module"]], "Welcome to LexFlow\u2019s documentation!": [[5, "welcome-to-lexflow-s-documentation"]], "Table of Contents:": [[5, null], [5, null]]}, "indexentries": {"base": [[1, "module-base"]], "module": [[1, "module-base"], [2, "module-base.executable"]], "chain (class in base.executable)": [[2, "base.executable.Chain"]], "concept (class in base.executable)": [[2, "base.executable.Concept"]], "conceptregistry (class in base.executable)": [[2, "base.executable.ConceptRegistry"]], "executable (class in base.executable)": [[2, "base.executable.Executable"]], "executableorchestrator (class in base.executable)": [[2, "base.executable.ExecutableOrchestrator"]], "languagemodel (class in base.executable)": [[2, "base.executable.LanguageModel"]], "probabilisticcomponent (class in base.executable)": [[2, "base.executable.ProbabilisticComponent"]], "prompt (class in base.executable)": [[2, "base.executable.Prompt"]], "threads (class in base.executable)": [[2, "base.executable.Threads"]], "assign_list_content() (base.executable.concept method)": [[2, "base.executable.Concept.assign_list_content"]], "assign_output_as_string() (base.executable.prompt method)": [[2, "base.executable.Prompt.assign_output_as_string"]], "assign_string_content() (base.executable.concept method)": [[2, "base.executable.Concept.assign_string_content"]], "base.executable": [[2, "module-base.executable"]], "choice (base.executable.concept attribute)": [[2, "base.executable.Concept.choice"]], "components (base.executable.executableorchestrator attribute)": [[2, "base.executable.ExecutableOrchestrator.components"]], "concepts (base.executable.conceptregistry property)": [[2, "base.executable.ConceptRegistry.concepts"]], "fill() (base.executable.prompt method)": [[2, "base.executable.Prompt.fill"]], "filled_prompt (base.executable.prompt attribute)": [[2, "base.executable.Prompt.filled_prompt"]], "generate_response (base.executable.languagemodel attribute)": [[2, "base.executable.LanguageModel.generate_response"]], "generate_response_async (base.executable.languagemodel attribute)": [[2, "base.executable.LanguageModel.generate_response_async"]], "get_name() (base.executable.concept method)": [[2, "base.executable.Concept.get_name"]], "get_value() (base.executable.concept method)": [[2, "base.executable.Concept.get_value"]], "inputs (base.executable.prompt attribute)": [[2, "base.executable.Prompt.inputs"]], "inputted (base.executable.concept attribute)": [[2, "base.executable.Concept.inputted"]], "level (base.executable.concept attribute)": [[2, "base.executable.Concept.level"]], "list_content (base.executable.concept attribute)": [[2, "base.executable.Concept.list_content"]], "listify_func() (base.executable.concept method)": [[2, "base.executable.Concept.listify_func"]], "memory (base.executable.executable attribute)": [[2, "base.executable.Executable.memory"]], "memory (base.executable.languagemodel attribute)": [[2, "base.executable.LanguageModel.memory"]], "model (base.executable.probabilisticcomponent attribute)": [[2, "base.executable.ProbabilisticComponent.model"]], "model_config (base.executable.chain attribute)": [[2, "base.executable.Chain.model_config"]], "model_config (base.executable.executable attribute)": [[2, "base.executable.Executable.model_config"]], "model_config (base.executable.executableorchestrator attribute)": [[2, "base.executable.ExecutableOrchestrator.model_config"]], "model_config (base.executable.languagemodel attribute)": [[2, "base.executable.LanguageModel.model_config"]], "model_config (base.executable.probabilisticcomponent attribute)": [[2, "base.executable.ProbabilisticComponent.model_config"]], "model_config (base.executable.threads attribute)": [[2, "base.executable.Threads.model_config"]], "model_fields (base.executable.chain attribute)": [[2, "base.executable.Chain.model_fields"]], "model_fields (base.executable.executable attribute)": [[2, "base.executable.Executable.model_fields"]], "model_fields (base.executable.executableorchestrator attribute)": [[2, "base.executable.ExecutableOrchestrator.model_fields"]], "model_fields (base.executable.languagemodel attribute)": [[2, "base.executable.LanguageModel.model_fields"]], "model_fields (base.executable.probabilisticcomponent attribute)": [[2, "base.executable.ProbabilisticComponent.model_fields"]], "model_fields (base.executable.threads attribute)": [[2, "base.executable.Threads.model_fields"]], "name (base.executable.concept attribute)": [[2, "base.executable.Concept.name"]], "name (base.executable.languagemodel attribute)": [[2, "base.executable.LanguageModel.name"]], "output (base.executable.prompt attribute)": [[2, "base.executable.Prompt.output"]], "prompt (base.executable.probabilisticcomponent attribute)": [[2, "base.executable.ProbabilisticComponent.prompt"]], "return_output_concept() (base.executable.prompt method)": [[2, "base.executable.Prompt.return_output_concept"]], "run() (base.executable.chain method)": [[2, "base.executable.Chain.run"]], "run() (base.executable.executable method)": [[2, "base.executable.Executable.run"]], "run() (base.executable.probabilisticcomponent method)": [[2, "base.executable.ProbabilisticComponent.run"]], "string_content (base.executable.concept attribute)": [[2, "base.executable.Concept.string_content"]], "template (base.executable.prompt attribute)": [[2, "base.executable.Prompt.template"]], "type (base.executable.concept attribute)": [[2, "base.executable.Concept.type"]], "update_concepts() (base.executable.conceptregistry method)": [[2, "base.executable.ConceptRegistry.update_concepts"]]}})